// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated/"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lead {
  id        String     @id @default(cuid())
  name      String
  phone     String
  email     String?
  contacted Boolean    @default(false)
  status    LeadStatus @default(NEW)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("leads")
}

enum LeadStatus {
  NEW
  CONTACTED
  QUALIFIED
  CONVERTED
  CLOSED

  @@map("lead_status")
}

model announcement {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("announcements")
}

model HeavyLead {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Personal Information
  name          String
  email         String?
  phone         String?
  currentCity   String
  aboutYourself String?

  // Study Preferences
  preferredCountry String
  intakeTimeline   String
  studyLevel       String
  currentEducation String
  passportStatus   String

  // Status tracking
  status     HeavyLeadStatus @default(NEW)
  assignedTo String?
  notes      String?

  @@map("Heavyleads")
}

enum HeavyLeadStatus {
  NEW
  CONTACTED
  IN_PROGRESS
  QUALIFIED
  CONVERTED
  CLOSED
}

model University {
  id                 String    @id @default(cuid())
  slug               String    @unique
  name               String
  country            String
  city               String?
  logoUrl            String?
  heroImageUrl       String?
  shortDescription   String?
  description        String?   @db.Text
  website            String?
  contact            Json?     // Stores contact details like { email, phone, address }

  exams              String[]  // List of accepted exams like ["IELTS", "TOEFL"]

  // Services are now individual boolean fields for easier filtering
  visaSupport        Boolean   @default(false)
  accommodation      Boolean   @default(false)
  forex              Boolean   @default(false)
  counselling        Boolean   @default(false)
  applicationFeeWaiver Boolean @default(false)
  scholarshipsHelp   Boolean   @default(false)

  courses            Json[]    // Stores a list of course objects

  tags               String[]

  // Additional fields for enhanced university information
  qsRanking          Int?      // QS World University Ranking
  tuitionFeeFrom    Int?      // Minimum tuition fee per year in USD
  tuitionFeeTo      Int?      // Maximum tuition fee per year in USD
  intakeSeasons     String[]  @default([]) // Available intake seasons like ["Fall", "Spring"]
  galleryImageUrls  String[]  @default([]) // Array of gallery image URLs

  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  @@map("universities")
}
